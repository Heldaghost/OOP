1. Чем класс отличается от структуры?
Основные отличия структуры от класса:
1. Это value type. То есть при передачи оной в метод и получении оной из метода, всегда передается/возвращается копия, а не ссылка на оригинал.
2. Не поддерживает наследования.
3. В следствие пункта номер два в структурах нельзя определить виртуальные члены.
4. Нельзя определить дефолтный конструктор.
5. По причине п. 4 отсутствуют инициализаторы полей.
6. Память для структуры выделяется в стеке (за некоторыми исключениями), а не на куче. Но это - деталь реализации, а не контракт.
7. Нельзя определить т.н. деструктор. По причине п. 6.

2. Что может и чего не может быть в структуре?
1) struct
2) Может иметь конструктор c парам.
3) нельзя определить конструктор,
используемый по умолчанию
(конструктор без параметров). Он
определяется для всех структур
автоматически и не подлежит изменению
4) Объект структуры может быть создан с
помощью оператора new (или нет)
5) размещение в стеке
6) Нельзя инициализировать поля
структуры при объявлении
7) нет автоматической инициализации
полей компилятором
8) структуры не
поддерживают наследование
3. Что такое перечисление? Приведите пример определения и использования
перечисления
Набор логически связанных констант
enum MathOperation
{ Add ,
Subtract,
Multiply,
Divide
}

4. Перечислите и поясните стандартные интерфейсы .Net?
ICloneable object Clone() Клонирование объектов
(поверхностное или
глубокое)
lEnumerable (IEnumerator)
GetEnumerator();
перебор элементов необобщенной коллекции основной для большинства коллекций
IEnumerator Current
bool MoveNext()
void Reset()
перебор по необобщенной коллекции можем перебирать объекты в цикле foreach
IComparable int CompareTo( object obj ) Сравнение объектов для выяснения порядка
IComparer int Compare(object o1, object o2);
Сравнение объектов будут иметь больший приоритет
IDisposable void Dispose() механизм для освобождения управляемых 
Интерфейс методы Назначение прим
IEquatable<T> bool Equals(T other); Сравнение объектов на равенство
IStructuralEquatable bool Equals(object,IEqualityComparer );
int GetHashCode( …); Проверка на равенство по значению

5. Как используется интерфейс IComparable?
IComparable int CompareTo( object obj ) Сравнение объектов для выяснения порядка
6. Как используется интерфейс ICloneable?
ICloneable object Clone() Клонирование объектов
(поверхностное или
глубокое)

7. Что такое полиморфизм? Перечислите его формы. Приведите примеры.
Ключевой аспект объектноориентированного программирования
Способность к изменению функций, унаследованных от базового класса
virtual public void A_method() { }
override public void A_method() { }

8. Зачем в классе определяют виртуальные методы?
Это знак того, что данный метод может быть переопределен в классе наследнике.

9. Как сделать запрет переопределения методов?
Использовать ключевое слово sealed.